[{"D:\\Base UI\\inventory-client\\src\\index.js":"1","D:\\Base UI\\inventory-client\\src\\reportWebVitals.js":"2","D:\\Base UI\\inventory-client\\src\\App.js":"3","D:\\Base UI\\inventory-client\\src\\screens\\login.js":"4","D:\\Base UI\\inventory-client\\src\\screens\\stockrequest.js":"5","D:\\Base UI\\inventory-client\\src\\screens\\dashboard.js":"6","D:\\Base UI\\inventory-client\\src\\screens\\nav.jsx":"7","D:\\Base UI\\inventory-client\\src\\screens\\review.js":"8","D:\\Base UI\\inventory-client\\src\\screens\\requestdetails.jsx":"9","D:\\Base UI\\inventory-client\\src\\screens\\statusdetails.js":"10","D:\\Base UI\\inventory-client\\src\\screens\\productanalysis.js":"11","D:\\Base UI\\inventory-client\\src\\screens\\salesdetails.js":"12"},{"size":624,"mtime":1608728898492,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1608616126736,"results":"15","hashOfConfig":"14"},{"size":1157,"mtime":1608742118081,"results":"16","hashOfConfig":"14"},{"size":2196,"mtime":1608619390742,"results":"17","hashOfConfig":"14"},{"size":3150,"mtime":1608743911252,"results":"18","hashOfConfig":"14"},{"size":3037,"mtime":1608742741362,"results":"19","hashOfConfig":"14"},{"size":431,"mtime":1608641347587,"results":"20","hashOfConfig":"14"},{"size":2741,"mtime":1608743691535,"results":"21","hashOfConfig":"14"},{"size":502,"mtime":1608730100711,"results":"22","hashOfConfig":"14"},{"size":3872,"mtime":1608743778001,"results":"23","hashOfConfig":"14"},{"size":2994,"mtime":1608741778077,"results":"24","hashOfConfig":"14"},{"size":3172,"mtime":1608742607113,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rc2xe8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"D:\\Base UI\\inventory-client\\src\\index.js",[],["55","56"],"D:\\Base UI\\inventory-client\\src\\reportWebVitals.js",[],"D:\\Base UI\\inventory-client\\src\\App.js",[],"D:\\Base UI\\inventory-client\\src\\screens\\login.js",["57"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { PageHeader } from 'antd';\r\n\r\nconst NormalLoginForm = () => {\r\n    const onFinish = values => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mainWrapper\">\r\n             <PageHeader\r\n    className=\"site-page-header\"\r\n    title=\"Login Page\"\r\n  />\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Form.Item name=\"remember\" noStyle>\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a className=\"login-form-forgot\" href=\"\">\r\n                    Forgot password\r\n        </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Log in\r\n        </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default NormalLoginForm;","D:\\Base UI\\inventory-client\\src\\screens\\stockrequest.js",["58","59","60"],"D:\\Base UI\\inventory-client\\src\\screens\\dashboard.js",[],"D:\\Base UI\\inventory-client\\src\\screens\\nav.jsx",[],"D:\\Base UI\\inventory-client\\src\\screens\\review.js",["61"],"D:\\Base UI\\inventory-client\\src\\screens\\requestdetails.jsx",["62"],"import React, { useState } from 'react';\r\nimport \"./stock.css\"; \r\n\r\nconst RequestDetails = (props) => {\r\n    // console.log(props.location.state);\r\n    const {itemname,itemnumber,quantity} = props.location.state;\r\n    return (\r\n        <div className=\"mainWrapper\">\r\n            <strong>Product Name: {itemname}</strong><br />\r\n            <strong>Product Number: {itemnumber}</strong><br />\r\n            <strong>Quantity: {quantity}</strong>\r\n        </div>\r\n    );\r\n};\r\nexport default RequestDetails;","D:\\Base UI\\inventory-client\\src\\screens\\statusdetails.js",["63"],"D:\\Base UI\\inventory-client\\src\\screens\\productanalysis.js",["64","65"],"import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'antd';\r\nimport { Button, message } from 'antd';\r\nimport axios from \"axios\";\r\n// import { Alert, Space } from 'antd';\r\n\r\nconst ProductTable = (props) => {\r\n\r\n    const [review, setReview] = useState({\r\n        list: []\r\n    })\r\n   const  refreshPage = () => {\r\n        window.location.reload();\r\n      }\r\n      const info = () => {\r\n        message.info('Requested Item is not available');\r\n      };\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/products\")\r\n            .then(response => {\r\n                const result = response.data;\r\n                setReview({ ...review, list: result })\r\n            })\r\n    }, [])\r\n\r\n    const handleReviewApproval= (record,action) => {\r\n        if(action===\"accept\"){\r\n            props.history.push('/productdetails');\r\n            const data = {\r\n                id:record.id,\r\n                name: record.name,\r\n                quantity:record.quantity,\r\n                status: \"APPROVED\"\r\n            };\r\n            console.log(\"data: \", data);\r\n            axios.put(\"/finished-product-approval\", data)\r\n            .then(response => {\r\n                 refreshPage() \r\n                 const result = response.data;\r\n                setReview({ ...review, list: result })\r\n                console.log(response.data);\r\n            })\r\n        }else{\r\n            props.history.push('/productdetails');\r\n        const data = {\r\n            id:record.id,\r\n            name: record.name,\r\n            quantity:record.quantity,\r\n            status: \"REDO\"\r\n        };\r\n        console.log(\"data: \", data);\r\n        axios.put(\"/finished-product-approval\", data)\r\n        .then(response => {\r\n             refreshPage() \r\n             const result = response.data;\r\n            setReview({ ...review, list: result })\r\n            console.log(response.data);\r\n        })\r\n        }\r\n             \r\n       \r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Product ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Quantity',\r\n            dataIndex: 'quantity',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            render: (record) => (\r\n                <div>\r\n                    <Button type='primary' onClick = {()=>{handleReviewApproval(record,\"accept\")}} >\r\n                        Accept\r\n                    </Button>\r\n                    <Button type='danger' style={{ marginLeft: \"10px\" }} onClick = {()=>{handleReviewApproval(record,\"decline\")}} >\r\n                        Decline\r\n                    </Button>\r\n                </div>\r\n            ),\r\n\r\n\r\n        }\r\n    ];\r\n    \r\n    return (\r\n        <>\r\n        <Table columns={columns} dataSource={review.list} size=\"middle\" />\r\n        </>\r\n    )\r\n}\r\nexport default ProductTable;\r\n","D:\\Base UI\\inventory-client\\src\\screens\\salesdetails.js",["66"],"import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'antd';\r\n// import { Button, message } from 'antd';\r\nimport axios from \"axios\";\r\n\r\nconst SalesTable = () => {\r\n\r\n    const [review, setReview] = useState({\r\n        list: []\r\n    })\r\n//    const  refreshPage = () => {\r\n//         window.location.reload();\r\n//       }\r\n    //   const info = () => {\r\n    //     message.info('Requested Item is not available');\r\n    //   };\r\n\r\n    useEffect(() => {\r\n        axios.get(\"/sales\")\r\n            .then(response => {\r\n                const result = response.data;\r\n                setReview({ ...review, list: result })\r\n            })\r\n    }, [])\r\n\r\n    // const handleReviewApproval= (record,action) => {\r\n    //     if(action===\"accept\"){\r\n    //         props.history.push('/productdetails');\r\n    //         const data = {\r\n    //             id:record.id,\r\n    //             productId:record.productId,\r\n    //             productName: record.productName,\r\n    //             quantity:record.quantity,\r\n    //             status: \"APPROVED\"\r\n    //         };\r\n    //         console.log(\"data: \", data);\r\n    //         axios.put(\"/finished-product-approval\", data)\r\n    //         .then(response => {\r\n    //              refreshPage() \r\n    //              const result = response.data;\r\n    //             setReview({ ...review, list: result })\r\n    //             console.log(response.data);\r\n    //         })\r\n    //     }else{\r\n    //         props.history.push('/productdetails');\r\n    //     const data = {\r\n    //         id:record.id,\r\n    //         name: record.name,\r\n    //         quantity:record.quantity,\r\n    //         status: \"RECEIVED\"\r\n    //     };\r\n    //     console.log(\"data: \", data);\r\n    //     axios.put(\"/finished-product-approval\", data)\r\n    //     .then(response => {\r\n    //          refreshPage() \r\n    //          const result = response.data;\r\n    //         setReview({ ...review, list: result })\r\n    //         console.log(response.data);\r\n    //     })\r\n    //     }\r\n             \r\n       \r\n    // }\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Product ID',\r\n            dataIndex: 'productId',\r\n        },\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'productName',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        // {\r\n        //     title: 'Action',\r\n        //     render: (record) => (\r\n        //         <div>\r\n        //             <Button type='primary' onClick = {()=>{handleReviewApproval(record,\"accept\")}} >\r\n        //                 Accept\r\n        //             </Button>\r\n        //             <Button type='danger' style={{ marginLeft: \"10px\" }} onClick = {()=>{handleReviewApproval(record,\"decline\")}} >\r\n        //                 Decline\r\n        //             </Button>\r\n        //         </div>\r\n        //     ),\r\n\r\n\r\n        // }\r\n    ];\r\n    \r\n    return (\r\n        <>\r\n        <Table columns={columns} dataSource={review.list} size=\"middle\" />\r\n        </>\r\n    )\r\n}\r\nexport default SalesTable;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":58,"column":17,"nodeType":"73","endLine":58,"endColumn":58},{"ruleId":"74","severity":1,"message":"75","line":29,"column":7,"nodeType":"76","endLine":29,"endColumn":9,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":36,"column":62,"nodeType":"80","messageId":"81","endLine":36,"endColumn":64},{"ruleId":"78","severity":1,"message":"79","line":50,"column":32,"nodeType":"80","messageId":"81","endLine":50,"endColumn":34},{"ruleId":"74","severity":1,"message":"82","line":27,"column":8,"nodeType":"76","endLine":27,"endColumn":21,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"82","line":19,"column":8,"nodeType":"76","endLine":19,"endColumn":21,"suggestions":"88"},{"ruleId":"84","severity":1,"message":"89","line":15,"column":13,"nodeType":"86","messageId":"87","endLine":15,"endColumn":17},{"ruleId":"74","severity":1,"message":"82","line":25,"column":8,"nodeType":"76","endLine":25,"endColumn":10,"suggestions":"90"},{"ruleId":"74","severity":1,"message":"82","line":24,"column":8,"nodeType":"76","endLine":24,"endColumn":10,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formValues'. Either include it or remove the dependency array. You can also do a functional update 'setFormValues(f => ...)' if you only need 'formValues' in the 'setFormValues' call.","ArrayExpression",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'review'. Either include it or remove the dependency array. You can also do a functional update 'setReview(r => ...)' if you only need 'review' in the 'setReview' call.",["95"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["96"],"'info' is assigned a value but never used.",["97"],["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"101","fix":"103"},{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},"Update the dependencies array to be: [formValues]",{"range":"107","text":"108"},"Update the dependencies array to be: [refreshPage, review]",{"range":"109","text":"110"},{"range":"111","text":"110"},"Update the dependencies array to be: [review]",{"range":"112","text":"113"},{"range":"114","text":"113"},[644,646],"[formValues]",[777,790],"[refreshPage, review]",[521,534],[691,693],"[review]",[661,663]]